{"version":3,"sources":["components/Task/TaskInterface.js","components/Task/TaskRoute.js"],"names":["title","description","status","assignee","userId","username","taskStatusOptions","name","value","fallback","BackdropLoader","Task","loadable","TaskDetail","ManageTask","TaskRoute","path","render","routeProps","taskInterface","component"],"mappings":"+KAAe,GACbA,MAAO,GACPC,YAAa,GACbC,OAAQ,OACRC,SAAU,CACRC,OAAQ,GACRC,SAAU,KAIDC,EAAoB,CAC/B,CAAEC,KAAM,OAAQC,MAAO,QACvB,CAAED,KAAM,cAAeC,MAAO,eAC9B,CAAED,KAAM,OAAQC,MAAO,SCNnBC,G,OAAW,kBAACC,EAAA,EAAD,OACXC,EAAOC,aAAS,kBAAM,8DAAwB,CAAEH,aAChDI,EAAaD,aAAS,kBAAM,iCAA8B,CAAEH,aAC5DK,EAAaF,aAAS,kBAAM,8DAA8B,CAAEH,aAgBnDM,UAdG,WAChB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,eACVC,OAAQ,SAACC,GAAD,OACN,kBAACJ,EAAD,eAAYK,cAAeA,EAAeb,kBAAmBA,GAAuBY,OACxF,kBAAC,IAAD,CAAOF,KAAK,iBAAiBC,OAAQ,SAACC,GAAD,OACnC,kBAACJ,EAAD,eAAYK,cAAeA,EAAeb,kBAAmBA,GAAuBY,OACtF,kBAAC,IAAD,CAAOF,KAAK,YAAYI,UAAWP,IACnC,kBAAC,IAAD,CAAOG,KAAK,QAAQI,UAAWT","file":"static/js/16.d34d90e5.chunk.js","sourcesContent":["export default {\n  title: \"\",\n  description: \"\",\n  status: \"open\",\n  assignee: {\n    userId: '',\n    username: ''\n  }\n}\n\nexport const taskStatusOptions = [\n  { name: 'Open', value: 'open' },\n  { name: 'In Progress', value: 'in-progress' },\n  { name: 'Done', value: 'done' }\n]\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport loadable from '@loadable/component';\nimport BackdropLoader from '../../common/BackdropLoader/BackdropLoader'\nimport taskInterface, { taskStatusOptions } from './TaskInterface'\nimport './Task.scss'\n\nconst fallback = <BackdropLoader />\nconst Task = loadable(() => import('../Task/Task'), { fallback })\nconst TaskDetail = loadable(() => import('../Task/TaskDetail'), { fallback })\nconst ManageTask = loadable(() => import('../Task/ManageTask'), { fallback })\n\nconst TaskRoute = () => {\n  return (\n    <Switch>\n      <Route path=\"/task/create\"\n        render={(routeProps) =>\n          <ManageTask taskInterface={taskInterface} taskStatusOptions={taskStatusOptions} {...routeProps} />} />\n      <Route path=\"/task/edit/:id\" render={(routeProps) =>\n        <ManageTask taskInterface={taskInterface} taskStatusOptions={taskStatusOptions} {...routeProps} />} />\n      <Route path=\"/task/:id\" component={TaskDetail} />\n      <Route path=\"/task\" component={Task} />\n    </Switch>\n  )\n}\n\nexport default TaskRoute\n"],"sourceRoot":""}