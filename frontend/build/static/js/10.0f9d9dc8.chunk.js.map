{"version":3,"sources":["components/Task/TaskDetail.js","common/Api/ApiEndpoints.js","components/Task/TaskApi.js","components/Task/TaskActions.js","common/Api/ApiActions.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"names":["connect","state","prevProps","id","match","params","task","tasks","length","find","item","_id","dispatch","actions","bindActionCreators","taskActions","Object","keys","useEffect","getTaskById","catch","error","console","log","title","status","dangerouslySetInnerHTML","__html","description","login","getTasks","queryString","url","apiEndpoints","axios","get","createTask","post","updateTask","put","deleteTask","delete","getTasksStatus","getTasksSuccess","type","READ_TASKS","payload","setTaskCount","count","SET_TASK_COUNT","getTaskByIdSuccess","GET_TASK_BY_ID","creteTaskSuccess","CREATE_TASK","updateTaskSuccess","UPDATE_TASK","deleteTaskSuccess","DELETE_TASK","getState","a","taskApi","response","data","items","saveTask","then","res","module","exports","runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","unwrapped","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply"],"mappings":"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","file":"static/js/10.0f9d9dc8.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport * as taskActions from './TaskActions'\nimport { bindActionCreators } from 'redux'\n\n\nconst TaskDetail = ({ id, task, actions }) => {\n\n  let length = task && Object.keys(task).length;\n  useEffect(() => {\n    if (!length) {\n      actions.getTaskById(id).catch(error => {\n        console.log('error ===>', error)\n      })\n    }\n  },[length, actions, id])\n\n  return (\n    task && Object.keys(task).length ?\n      <>\n        <h1>{task.title}</h1>\n        <p><b>Status:</b> {task.status}</p>\n        <div dangerouslySetInnerHTML={{ __html: task.description }} />\n      </> : ''\n  )\n}\n\n\nTaskDetail.propTypes = {\n  id: PropTypes.string.isRequired,\n  task: PropTypes.object.isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state, prevProps) => {\n  const id = prevProps.match.params.id;\n  // TODO: replace with redux selectors\n  const task = state.tasks.length > 0 ? state.tasks.find(item => item && item._id === id) : {};\n  return { task, id }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(taskActions, dispatch)\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskDetail);\n","export default {\n  login: '/api/auth/login',\n  task: '/api/task'\n}\n","import axios from 'axios';\nimport apiEndpoints from '../../common/Api/ApiEndpoints'\n\nexport const getTasks = (queryString) => {\n  let url = queryString ? apiEndpoints.task + queryString : apiEndpoints.task;\n  return axios.get(url)\n}\n\nexport const getTaskById = (id) => {\n  return axios.get(apiEndpoints.task + `/${id}`)\n}\n\nexport const createTask = (task) => {\n  return axios.post(apiEndpoints.task, task)\n}\n\nexport const updateTask = (task) => {\n  return axios.put(apiEndpoints.task + `/${task._id}`, task)\n}\n\nexport const deleteTask = (id) => {\n  return axios.delete(apiEndpoints.task + `/${id}`)\n}\n\nexport const getTasksStatus = () => {\n  return axios.get(apiEndpoints.task + '/status')\n}\n","import actions from './TaskConstants'\nimport * as taskApi from './TaskApi'\nimport { apiCallError, beginApiCall } from '../../common/Api/ApiActions'\n\nexport const getTasksSuccess = (tasks) => ({ type: actions.READ_TASKS, payload: tasks })\nexport const setTaskCount = (count) => ({ type: actions.SET_TASK_COUNT, payload: count })\nexport const getTaskByIdSuccess = (task) => ({ type: actions.GET_TASK_BY_ID, payload: task })\nexport const creteTaskSuccess = (task) => ({ type: actions.CREATE_TASK, payload: task })\nexport const updateTaskSuccess = (task) => ({ type: actions.UPDATE_TASK, payload: task })\nexport const deleteTaskSuccess = (id) => ({ type: actions.DELETE_TASK, payload: id })\n\nexport const getTasks = (queryString) => {\n  return async (dispatch, getState) => {\n    dispatch(beginApiCall())\n    try {\n      let { count } = getState()\n      let response = await taskApi.getTasks(queryString)\n      dispatch(getTasksSuccess(response.data.items))\n      if (response.data.count !== count)\n        dispatch(setTaskCount(response.data.count))\n    } catch (error) {\n      dispatch(apiCallError(error))\n      throw error\n    }\n  }\n}\n\nexport const getTaskById = (id) => {\n  return async (dispatch) => {\n    try {\n      dispatch(beginApiCall())\n      let response = await taskApi.getTaskById(id)\n      dispatch(getTaskByIdSuccess(response.data.item))\n    } catch (error) {\n      dispatch(apiCallError(error))\n      throw error\n    }\n  }\n}\n\nexport const saveTask = task => {\n  return async (dispatch) => {\n    dispatch(beginApiCall())\n    if (task._id) {\n      try {\n        let response = await taskApi.updateTask(task)\n        dispatch(updateTaskSuccess(response.data.item))\n        return response.data.item\n      } catch (error) {\n        dispatch(apiCallError(error))\n        throw error\n      }\n    } else {\n      try {\n        let response = await taskApi.createTask(task)\n        dispatch(creteTaskSuccess(response.data.item))\n        return response.data.item\n      } catch (error) {\n        dispatch(apiCallError(error))\n        throw error\n      }\n    }\n  }\n}\n\nexport const deleteTask = (id) => {\n  return (dispatch) => {\n    return taskApi.deleteTask(id).then(res => {\n      dispatch(deleteTaskSuccess(id))\n      return res;\n    }).catch(error => {\n      dispatch(apiCallError(error))\n      throw error;\n    })\n  }\n}\n","export function beginApiCall() {\n  return { type: 'BEGIN_API_CALL' };\n}\n\nexport function apiCallError() {\n  return { type: 'API_CALL_ERROR' };\n}\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"sourceRoot":""}