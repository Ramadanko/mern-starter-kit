{"version":3,"sources":["components/Task/TaskStatus.js","common/Api/ApiEndpoints.js","components/Task/TaskApi.js"],"names":["TaskStatus","useState","count","setCount","data","setData","useEffect","getTasksStatus","then","res","items","chartData","id","label","value","open","inProgress","done","catch","err","console","log","style","height","length","login","task","getTasks","queryString","url","apiEndpoints","axios","get","getTaskById","createTask","post","updateTask","put","_id","deleteTask","delete"],"mappings":"2JAwCeA,UApCI,WAAO,IAAD,EAECC,mBAAS,MAFV,mBAElBC,EAFkB,KAEXC,EAFW,OAGDF,mBAAS,IAHR,mBAGlBG,EAHkB,KAGZC,EAHY,KAuBvB,OAlBAC,qBAAU,WAERC,cACGC,MAAK,SAAAC,GAAQ,IACNC,EAAUD,EAAIL,KAAdM,MACFC,EAAY,CACd,CAAEC,GAAI,OAAQC,MAAO,OAAQC,MAAOJ,EAAMK,MAC1C,CAAEH,GAAI,aAAcC,MAAO,cAAeC,MAAOJ,EAAMM,YACvD,CAAEJ,GAAI,OAAQC,MAAO,OAAQC,MAAOJ,EAAMO,OAE5CZ,EAAQM,GACRR,EAASO,EAAMR,UAEhBgB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEf,IAGD,yBAAKG,MAAO,CAACC,OAAO,UAEfnB,EAAKoB,OAEJ,oCACE,4BAAKtB,EAAL,UACA,kBAAC,IAAD,CAAeE,KAAMA,KAHvB,gB,gCC/BK,KACbqB,MAAO,kBACPC,KAAM,c,gCCFR,yOAGaC,EAAW,SAACC,GACvB,IAAIC,EAAMD,EAAcE,IAAaJ,KAAOE,EAAcE,IAAaJ,KACvE,OAAOK,IAAMC,IAAIH,IAGNI,EAAc,SAACrB,GAC1B,OAAOmB,IAAMC,IAAIF,IAAaJ,KAAb,WAAwBd,KAG9BsB,EAAa,SAACR,GACzB,OAAOK,IAAMI,KAAKL,IAAaJ,KAAMA,IAG1BU,EAAa,SAACV,GACzB,OAAOK,IAAMM,IAAIP,IAAaJ,KAAb,WAAwBA,EAAKY,KAAOZ,IAG1Ca,EAAa,SAAC3B,GACzB,OAAOmB,IAAMS,OAAOV,IAAaJ,KAAb,WAAwBd,KAGjCL,EAAiB,WAC5B,OAAOwB,IAAMC,IAAIF,IAAaJ,KAAO","file":"static/js/15.8f04577b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ResponsivePie } from '@nivo/pie'\nimport { getTasksStatus } from './TaskApi'\n\nconst TaskStatus = () => {\n\n  let [count, setCount] = useState(null)\n  let [data, setData] = useState([])\n\n  useEffect(() => {\n\n    getTasksStatus()\n      .then(res => {\n        let { items } = res.data\n        let chartData = [\n          { id: 'open', label: 'Open', value: items.open},\n          { id: 'inProgress', label: 'In Progress', value: items.inProgress},\n          { id: 'done', label: 'Done', value: items.done}\n        ]\n        setData(chartData)\n        setCount(items.count)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }, [])\n\n  return (\n    <div style={{height:'300px'}}>\n      {\n        !data.length ?\n          'Loading...' :\n          <>\n            <h3>{count} Tasks</h3>\n            <ResponsivePie data={data}/>\n          </>\n      }\n    </div>\n  )\n}\nexport default TaskStatus\n","export default {\n  login: '/api/auth/login',\n  task: '/api/task'\n}\n","import axios from 'axios';\nimport apiEndpoints from '../../common/Api/ApiEndpoints'\n\nexport const getTasks = (queryString) => {\n  let url = queryString ? apiEndpoints.task + queryString : apiEndpoints.task;\n  return axios.get(url)\n}\n\nexport const getTaskById = (id) => {\n  return axios.get(apiEndpoints.task + `/${id}`)\n}\n\nexport const createTask = (task) => {\n  return axios.post(apiEndpoints.task, task)\n}\n\nexport const updateTask = (task) => {\n  return axios.put(apiEndpoints.task + `/${task._id}`, task)\n}\n\nexport const deleteTask = (id) => {\n  return axios.delete(apiEndpoints.task + `/${id}`)\n}\n\nexport const getTasksStatus = () => {\n  return axios.get(apiEndpoints.task + '/status')\n}\n"],"sourceRoot":""}